$hu-color-core-modules: hu-format-modules(hu-get-class-modules($hu-color-modules, core, $hu-color-modules));
$hu-color-pseudos: hu-get-class-modules($hu-color-modules, pseudos, null);
$hu-color-parents: hu-get-class-modules($hu-color-modules, parents, null);
$hu-color-property-name: color;
$hu-color-class-name: hu-get-class-name(($hu-color-alias: $hu-color-property-name));

@each $module in $hu-color-core-modules {
  @each $hue, $colors in $hu-color-types {
    @each $scale, $value in $colors {
      $class-name: hu-class-name("#{$hu-color-class-name}:#{$hue}-#{$scale}");

      @include hu-generic($class-name, $module) {
        #{$hu-color-property-name}: $value #{hu-important()};
      }
    }
  }
}

@if (index($hu-color-core-modules, responsive)) {
  @each $mq-scale, $mq-value in $hu-media-queries {
    @include hu-media-query($mq-value) {
      @each $hue, $colors in $hu-color-types {
        @each $scale, $value in $colors {
          $class-name: hu-class-name("#{$hu-color-class-name}:#{$hue}-#{$scale}");

          @include hu-responsive($class-name, $hu-color-core-modules, $mq-scale) {
            #{$hu-color-property-name}: $value #{hu-important()};
          }
        }
      }
    }
  }
}

@if ($hu-color-pseudos) {
  @each $module in $hu-color-core-modules {
    @each $hue, $colors in $hu-color-types {
      @each $scale, $value in $colors {
        $class-name: hu-class-name("#{$hu-color-class-name}:#{$hue}-#{$scale}");

        @include hu-pseudo($class-name, $hu-color-pseudos, $module) {
          #{$hu-color-property-name}: $value #{hu-important()};
        }
      }
    }
  }

  @if (index($hu-color-core-modules, responsive)) {
    @each $mq-scale, $mq-value in $hu-media-queries {
      @include hu-media-query($mq-value) {
        @each $hue, $colors in $hu-color-types {
          @each $scale, $value in $colors {
            $class-name: hu-class-name("#{$hu-color-class-name}:#{$hue}-#{$scale}");

            @include hu-pseudo-responsive($class-name, $hu-color-pseudos, $hu-color-core-modules, $mq-scale) {
              #{$hu-color-property-name}: $value #{hu-important()};
            }
          }
        }
      }
    }
  }
}

@if ($hu-color-parents) {
  @each $module in $hu-color-core-modules {
    @each $hue, $colors in $hu-color-types {
      @each $scale, $value in $colors {
        $class-name: hu-class-name("#{$hu-color-class-name}:#{$hue}-#{$scale}");

        @include hu-parent($class-name, $hu-color-parents, $module) {
          #{$hu-color-property-name}: $value #{hu-important()};
        }
      }
    }
  }

  @if (index($hu-color-core-modules, responsive)) {
    @each $mq-scale, $mq-value in $hu-media-queries {
      @include hu-media-query($mq-value) {
        @each $hue, $colors in $hu-color-types {
          @each $scale, $value in $colors {
            $class-name: hu-class-name("#{$hu-color-class-name}:#{$hue}-#{$scale}");

            @include hu-parent-responsive($class-name, $hu-color-parents, $hu-color-core-modules, $mq-scale) {
              #{$hu-color-property-name}: $value #{hu-important()};
            }
          }
        }
      }
    }
  }
}
